///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class CardsStatus {
/*
{
  "success": true,
  "message": ""
} 
*/

  bool? success;
  String? message;

  CardsStatus({
    this.success,
    this.message,
  });
  CardsStatus.fromJson(Map<String, dynamic> json) {
    success = json["success"];
    message = json["message"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["success"] = success;
    data["message"] = message;
    return data;
  }
}

class CardsResponseCardsMetadataActions {
/*
{
  "type": "dismiss",
  "text": "Remover"
} 
*/

  String? type;
  String? text;

  CardsResponseCardsMetadataActions({
    this.type,
    this.text,
  });
  CardsResponseCardsMetadataActions.fromJson(Map<String, dynamic> json) {
    type = json["type"]?.toString();
    text = json["text"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["type"] = type;
    data["text"] = text;
    return data;
  }
}

class CardsResponseCardsMetadata {
/*
{
  "type": "HEADER",
  "title": "Consultoria de Beleza",
  "icon": "https://s3.amazonaws.com/appcn-prd/sys_images/information.png",
  "hasActions": true,
  "actions": [
    {
      "type": "dismiss",
      "text": "Remover"
    }
  ]
} 
*/

  String? type;
  String? title;
  String? icon;
  String? image;
  String? summary;
  String? text;
  bool? hasActions;
  List<CardsResponseCardsMetadataActions?>? actions;

  CardsResponseCardsMetadata({
    this.type,
    this.title,
    this.icon,
    this.image,
    this.summary,
    this.text,
    this.hasActions,
    this.actions,
  });
  CardsResponseCardsMetadata.fromJson(Map<String, dynamic> json) {
    type = json["type"]?.toString();
    title = json["title"]?.toString();
    icon = json["icon"]?.toString();
    image = json["image"]?.toString();
    summary = json["summary"]?.toString();
    text = json["text"]?.toString();
    hasActions = json["hasActions"];
    if (json["actions"] != null) {
      final v = json["actions"];
      final arr0 = <CardsResponseCardsMetadataActions>[];
      v.forEach((v) {
        arr0.add(CardsResponseCardsMetadataActions.fromJson(v));
      });
      actions = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["type"] = type;
    data["title"] = title;
    data["icon"] = icon;
    data["image"] = image;
    data["summary"] = summary;
    data["text"] = text;
    data["hasActions"] = hasActions;
    if (actions != null) {
      final v = actions;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["actions"] = arr0;
    }
    return data;
  }
}

class CardsResponseCards {
/*
{
  "deletedAt": "",
  "country": "BR",
  "createdAt": "2021-08-28T00:53:15.796Z",
  "readedWeb": "",
  "createId": "CA00001225",
  "dismissedAt": "",
  "deletedBy": "",
  "campaignId": "CA00001225---17537241226855711",
  "snoozeUntil": "",
  "clientId": "a9df5608-3ee0-3c45-b305-84ec53797449",
  "createdBy": "0",
  "combination": "CA00001225---17537241226855711-122685571",
  "dateEnd": "2021-09-16T03:00:00.000Z",
  "dateStart": "2021-08-27T15:04:13.000Z",
  "menu": "0",
  "userId": "122685571",
  "tags": [
    null
  ],
  "readedApp": "",
  "template": "0",
  "priority": "5",
  "snoozedAt": "",
  "active": true,
  "campaignGroup": "",
  "metadata": [
    {
      "type": "HEADER",
      "title": "Consultoria de Beleza",
      "icon": "https://s3.amazonaws.com/appcn-prd/sys_images/information.png",
      "hasActions": true,
      "actions": [
        {
          "type": "dismiss",
          "text": "Remover"
        }
      ]
    }
  ],
  "description": "",
  "id": "4526094421852160"
} 
*/

  String? deletedAt;
  String? country;
  String? createdAt;
  String? readedWeb;
  String? createId;
  String? dismissedAt;
  String? deletedBy;
  String? campaignId;
  String? snoozeUntil;
  String? clientId;
  String? createdBy;
  String? combination;
  String? dateEnd;
  String? dateStart;
  String? menu;
  String? userId;
  String? readedApp;
  String? template;
  String? priority;
  String? snoozedAt;
  bool? active;
  String? campaignGroup;
  List<CardsResponseCardsMetadata?>? metadata;
  String? description;
  String? id;

  CardsResponseCards({
    this.deletedAt,
    this.country,
    this.createdAt,
    this.readedWeb,
    this.createId,
    this.dismissedAt,
    this.deletedBy,
    this.campaignId,
    this.snoozeUntil,
    this.clientId,
    this.createdBy,
    this.combination,
    this.dateEnd,
    this.dateStart,
    this.menu,
    this.userId,
    this.readedApp,
    this.template,
    this.priority,
    this.snoozedAt,
    this.active,
    this.campaignGroup,
    this.metadata,
    this.description,
    this.id,
  });
  CardsResponseCards.fromJson(Map<String, dynamic> json) {
    deletedAt = json["deletedAt"]?.toString();
    country = json["country"]?.toString();
    createdAt = json["createdAt"]?.toString();
    readedWeb = json["readedWeb"]?.toString();
    createId = json["createId"]?.toString();
    dismissedAt = json["dismissedAt"]?.toString();
    deletedBy = json["deletedBy"]?.toString();
    campaignId = json["campaignId"]?.toString();
    snoozeUntil = json["snoozeUntil"]?.toString();
    clientId = json["clientId"]?.toString();
    createdBy = json["createdBy"]?.toString();
    combination = json["combination"]?.toString();
    dateEnd = json["dateEnd"]?.toString();
    dateStart = json["dateStart"]?.toString();
    menu = json["menu"]?.toString();
    userId = json["userId"]?.toString();
    readedApp = json["readedApp"]?.toString();
    template = json["template"]?.toString();
    priority = json["priority"]?.toString();
    snoozedAt = json["snoozedAt"]?.toString();
    active = json["active"];
    campaignGroup = json["campaignGroup"]?.toString();
    if (json["metadata"] != null) {
      final v = json["metadata"];
      final arr0 = <CardsResponseCardsMetadata>[];
      v.forEach((v) {
        arr0.add(CardsResponseCardsMetadata.fromJson(v));
      });
      metadata = arr0;
    }
    description = json["description"]?.toString();
    id = json["id"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["deletedAt"] = deletedAt;
    data["country"] = country;
    data["createdAt"] = createdAt;
    data["readedWeb"] = readedWeb;
    data["createId"] = createId;
    data["dismissedAt"] = dismissedAt;
    data["deletedBy"] = deletedBy;
    data["campaignId"] = campaignId;
    data["snoozeUntil"] = snoozeUntil;
    data["clientId"] = clientId;
    data["createdBy"] = createdBy;
    data["combination"] = combination;
    data["dateEnd"] = dateEnd;
    data["dateStart"] = dateStart;
    data["menu"] = menu;
    data["userId"] = userId;
    data["readedApp"] = readedApp;
    data["template"] = template;
    data["priority"] = priority;
    data["snoozedAt"] = snoozedAt;
    data["active"] = active;
    data["campaignGroup"] = campaignGroup;
    if (metadata != null) {
      final v = metadata;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["metadata"] = arr0;
    }
    data["description"] = description;
    data["id"] = id;
    return data;
  }
}

class CardsResponse {
/*
{
  "cards": [
    {
      "deletedAt": "",
      "country": "BR",
      "createdAt": "2021-08-28T00:53:15.796Z",
      "readedWeb": "",
      "createId": "CA00001225",
      "dismissedAt": "",
      "deletedBy": "",
      "campaignId": "CA00001225---17537241226855711",
      "snoozeUntil": "",
      "clientId": "a9df5608-3ee0-3c45-b305-84ec53797449",
      "createdBy": "0",
      "combination": "CA00001225---17537241226855711-122685571",
      "dateEnd": "2021-09-16T03:00:00.000Z",
      "dateStart": "2021-08-27T15:04:13.000Z",
      "menu": "0",
      "userId": "122685571",
      "tags": [
        null
      ],
      "readedApp": "",
      "template": "0",
      "priority": "5",
      "snoozedAt": "",
      "active": true,
      "campaignGroup": "",
      "metadata": [
        {
          "type": "HEADER",
          "title": "Consultoria de Beleza",
          "icon": "https://s3.amazonaws.com/appcn-prd/sys_images/information.png",
          "hasActions": true,
          "actions": [
            {
              "type": "dismiss",
              "text": "Remover"
            }
          ]
        }
      ],
      "description": "",
      "id": "4526094421852160"
    }
  ],
  "moreResults": false,
  "nextPage": ""
} 
*/

  List<CardsResponseCards?>? cards;
  bool? moreResults;
  String? nextPage;

  CardsResponse({
    this.cards,
    this.moreResults,
    this.nextPage,
  });
  CardsResponse.fromJson(Map<String, dynamic> json) {
    if (json["cards"] != null) {
      final v = json["cards"];
      final arr0 = <CardsResponseCards>[];
      v.forEach((v) {
        arr0.add(CardsResponseCards.fromJson(v));
      });
      cards = arr0;
    }
    moreResults = json["moreResults"];
    nextPage = json["nextPage"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (cards != null) {
      final v = cards;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["cards"] = arr0;
    }
    data["moreResults"] = moreResults;
    data["nextPage"] = nextPage;
    return data;
  }
}

class Cards {
/*
{
  "response": {
    "cards": [
      {
        "deletedAt": "",
        "country": "BR",
        "createdAt": "2021-08-28T00:53:15.796Z",
        "readedWeb": "",
        "createId": "CA00001225",
        "dismissedAt": "",
        "deletedBy": "",
        "campaignId": "CA00001225---17537241226855711",
        "snoozeUntil": "",
        "clientId": "a9df5608-3ee0-3c45-b305-84ec53797449",
        "createdBy": "0",
        "combination": "CA00001225---17537241226855711-122685571",
        "dateEnd": "2021-09-16T03:00:00.000Z",
        "dateStart": "2021-08-27T15:04:13.000Z",
        "menu": "0",
        "userId": "122685571",
        "tags": [
          null
        ],
        "readedApp": "",
        "template": "0",
        "priority": "5",
        "snoozedAt": "",
        "active": true,
        "campaignGroup": "",
        "metadata": [
          {
            "type": "HEADER",
            "title": "Consultoria de Beleza",
            "icon": "https://s3.amazonaws.com/appcn-prd/sys_images/information.png",
            "hasActions": true,
            "actions": [
              {
                "type": "dismiss",
                "text": "Remover"
              }
            ]
          }
        ],
        "description": "",
        "id": "4526094421852160"
      }
    ],
    "moreResults": false,
    "nextPage": ""
  },
  "status": {
    "success": true,
    "message": ""
  }
} 
*/

  CardsResponse? response;
  CardsStatus? status;

  Cards({
    this.response,
    this.status,
  });
  Cards.fromJson(Map<String, dynamic> json) {
    response = (json["response"] != null) ? CardsResponse.fromJson(json["response"]) : null;
    status = (json["status"] != null) ? CardsStatus.fromJson(json["status"]) : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (response != null) {
      data["response"] = response!.toJson();
    }
    if (status != null) {
      data["status"] = status!.toJson();
    }
    return data;
  }
}
